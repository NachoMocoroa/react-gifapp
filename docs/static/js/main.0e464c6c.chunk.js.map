{"version":3,"sources":["components/AddCategory.js","helpers/getAPIGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","className","type","placeholder","value","onChange","target","getAPIGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","href","rel","alt","src","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","GifApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"sLAsCeA,EAnCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGHC,mBAAS,IAHN,mBAGhCC,EAHgC,KAGpBC,EAHoB,KAevC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,EAAc,CAACE,IACfC,EAAc,MAKlB,SACI,sBAAKM,UAAU,YAAf,UACI,uBACIC,KAAK,OACLD,UAAU,aACVE,YAnBQ,mBAoBRC,MAAQV,EACRW,SAnBK,SAACR,GAClBF,EAAcE,EAAES,OAAOF,UAoBf,sBAAMH,UAAU,oB,8BC5BnBM,EAAU,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACP,mCACC,uCACF,GACRC,EAJgB,UAEN,uCAFM,cAIOC,UAAUH,GAJjB,kBAGR,GAHQ,oBACP,oCADO,SAKHI,MAAMF,GALH,cAKhBG,EALgB,gBAMCA,EAAKC,OANN,uBAMdC,EANc,EAMdA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZpB,kBAgBfM,GAhBe,4CAAH,sDC2BRO,EAxBK,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEzB,OACI,oBACIc,KAAOd,EACPJ,OAAO,SACPmB,IAAI,sBACJxB,UAAU,6CAJd,UAKI,qBAAKA,UAAU,mBAAf,SACI,qBACIyB,IAAMN,EACNO,IAAMjB,MAGZU,GAAS,mBAAGnB,UAAU,gBAAb,SAA+BmB,QCWvCQ,EAvBC,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EAEVf,mBAAS,CACjCsB,KAAM,GACNc,SAAS,IAJyB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAiBtC,OAVAC,qBAAU,WACNzB,EAAWC,GACNyB,MAAK,SAAAC,GACFH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGtB,CAACrB,IAEGsB,EDb0BK,CAAa3B,GAAjCa,EAFiB,EAEtBN,KAAac,EAFS,EAETA,QAErB,OACI,qCACI,oBAAI5B,UAAU,oCAAd,SAAoDO,IAClDqB,GAAW,mBAAG5B,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SAEQoB,EAAOJ,KAAI,SAAAmB,GAAK,OACZ,cAAC,EAAD,eAAmCA,GAAhBA,EAAMjB,aEgBlCkB,EA5BA,SAAC,GAAgC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,IAEP7C,mBAAS6C,GAFF,mBAEpCC,EAFoC,KAExB/C,EAFwB,KAI3C,OACI,sBAAKS,UAAU,MAAf,UACI,mCACI,wCACA,cAAC,EAAD,CAAaT,cAAgBA,OAEjC,+BAEQ+C,EAAWtB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAWA,GADLA,QAMtB,iCACI,sECnBhBgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0e464c6c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const placeholderText = 'Search and Enter';\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 1) {\r\n            setCategories([inputValue]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <div className=\"input-box\">\r\n                <input\r\n                    type=\"text\" \r\n                    className=\"underlined\" \r\n                    placeholder={ placeholderText } \r\n                    value={ inputValue } \r\n                    onChange={ handleChange } \r\n                />\r\n                <span className=\"highlight\"></span>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getAPIGifs = async( category ) => {\r\n    const apiKey = 'mMFu3Cp45vszWQgGWWh76aKt2WdQohpe';\r\n    const urlBase = 'https://api.giphy.com/v1/gifs/search';\r\n    const limit = 10;\r\n    const url = `${urlBase}?q=${ encodeURI(category) }&limit=${limit}&api_key=${apiKey}`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GifGridItem = ({title, url}) => {\r\n\r\n    return (\r\n        <a \r\n            href={ url } \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\" \r\n            className=\"card-gif animate__animated animate__fadeIn\">\r\n            <div className=\"card-gif-wrapper\">\r\n                <img \r\n                    alt={ title } \r\n                    src={ url } \r\n                />\r\n            </div>\r\n            { title && <p className=\"card-gif-text\">{ title }</p> }\r\n        </a>\r\n    );\r\n};\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"animate__animated animate__fadeIn\">{ category }</h2>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(image => (\r\n                        <GifGridItem key={ image.id } { ...image } />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from 'react';\r\nimport { getAPIGifs } from '../helpers/getAPIGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [ state, setState ] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    \r\n    useEffect(() => {\r\n        getAPIGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [category]);\r\n\r\n    return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifApp = ({ defaultCategories = [] }) => {\r\n\r\n    const [categories, setCategories] = useState(defaultCategories);\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <header>\r\n                <h1>GifApp</h1>\r\n                <AddCategory setCategories={ setCategories } />\r\n            </header>\r\n            <main>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key={ category } \r\n                            category={ category } \r\n                        />\r\n                    ))\r\n                }\r\n            </main>\r\n            <footer>\r\n                <p>All images from &copy;GIPHY, Inc.</p>\r\n            </footer>\r\n        </div>\r\n    );\r\n        \r\n}\r\n\r\nexport default GifApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifApp from './GifApp';\n\nReactDOM.render(\n    <GifApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}